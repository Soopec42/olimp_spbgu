#include <iostream>
#include <vector>
#include <unordered_map>

using namespace std;



int main()
{

	int n, d, lastf = 0, lasts = 0;
	cin >> n;
	vector<int> first(n);
	vector<int> second(n);

	

	for (int i = 0; i < n; i++) {
		first[i] = i + 1;  
	}

	for (int i = 0; i < n; i++) {
		cin >> d;
		second[i] = d;  
	}
	for (int f = 0; f < n; f++)
	{
		int needf = 0, needs = 0, zapf = -1, zaps = -1, min = 100000;
		for (int j = 0; j < n; j++)
		{
			for (int k = 0; k < n; k++)
			{
				if ((first[j] == second[k]) && first[j] != 0)
				{
					int dist = abs(j - lastf) + abs(k - lasts);
					if (dist < min)
					{
						min = dist;
						needf = j - lastf;
						needs = k - lasts;
						zapf = j;
						zaps = k;
					}
				}
			}
		}
		if (needs > 0)
		{
			for (int j = 1; j <= needs; j++)
			{
				cout << "R";
			}
		}
		if (needs < 0)
		{
			for (int j = 1; j <= abs(needs); j++)
			{
				cout << "L";
			}
		}
		if (needf > 0)
		{
			for (int j = 1; j <= needf; j++)
			{
				cout << "r";
			}
		}
		if (needf < 0)
		{
			for (int j = 1; j <= abs(needf); j++)
			{
				cout << "l";
			}
		}
		lastf = zapf;
		lasts = zaps;
		first[zapf] = 0;
		second[zaps] = 0;
	}

}
